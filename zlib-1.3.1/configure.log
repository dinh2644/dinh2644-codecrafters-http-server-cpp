--------------------
./configure --prefix=../1.3.1
Fri May 31 01:48:39 AM EDT 2024
Checking for gcc...
=== ztest1021264.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest1021264.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1021264.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest1021264.c

Checking for shared library support...
=== ztest1021264.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c -O3 -fPIC ztest1021264.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1021264.so ztest1021264.o
Building shared library libz.so.1.3.1 with gcc.

=== ztest1021264.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest1021264.c
Checking for size_t... Yes.

=== ztest1021264.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1021264.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1021264.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1021264 ztest1021264.c
Checking for strerror... Yes.

=== ztest1021264.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1021264.c
Checking for unistd.h... Yes.

=== ztest1021264.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1021264.c
Checking for stdarg.h... Yes.

=== ztest1021264.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1021264.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1021264.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1021264 ztest1021264.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1021264.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1021264.c
Checking for return value of vsnprintf()... Yes.

=== ztest1021264.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1021264.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.3.1
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.3.1
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = ../1.3.1
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/tdinh3/http_server/codecrafters-http-server-cpp
Fri May 31 02:18:32 AM EDT 2024
Checking for gcc...
=== ztest1032905.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest1032905.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1032905.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest1032905.c

Checking for shared library support...
=== ztest1032905.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c -O3 -fPIC ztest1032905.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1032905.so ztest1032905.o
Building shared library libz.so.1.3.1 with gcc.

=== ztest1032905.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest1032905.c
Checking for size_t... Yes.

=== ztest1032905.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1032905.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1032905.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1032905 ztest1032905.c
Checking for strerror... Yes.

=== ztest1032905.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1032905.c
Checking for unistd.h... Yes.

=== ztest1032905.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1032905.c
Checking for stdarg.h... Yes.

=== ztest1032905.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1032905.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1032905.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1032905 ztest1032905.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1032905.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1032905.c
Checking for return value of vsnprintf()... Yes.

=== ztest1032905.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1032905.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.3.1
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.3.1
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/tdinh3/http_server/codecrafters-http-server-cpp
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/usr/bin/ld
Fri May 31 02:20:05 AM EDT 2024
Checking for gcc...
=== ztest1033946.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest1033946.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1033946.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest1033946.c

Checking for shared library support...
=== ztest1033946.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c -O3 -fPIC ztest1033946.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1033946.so ztest1033946.o
Building shared library libz.so.1.3.1 with gcc.

=== ztest1033946.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest1033946.c
Checking for size_t... Yes.

=== ztest1033946.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1033946.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1033946.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1033946 ztest1033946.c
Checking for strerror... Yes.

=== ztest1033946.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1033946.c
Checking for unistd.h... Yes.

=== ztest1033946.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1033946.c
Checking for stdarg.h... Yes.

=== ztest1033946.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1033946.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1033946.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1033946 ztest1033946.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1033946.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1033946.c
Checking for return value of vsnprintf()... Yes.

=== ztest1033946.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1033946.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.3.1
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.3.1
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/bin/ld
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --prefix=/home/tdinh3/http_server/codecrafters-http-server-cpp/
Fri May 31 02:21:11 AM EDT 2024
Checking for gcc...
=== ztest1034840.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest1034840.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest1034840.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest1034840.c

Checking for shared library support...
=== ztest1034840.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c -O3 -fPIC ztest1034840.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest1034840.so ztest1034840.o
Building shared library libz.so.1.3.1 with gcc.

=== ztest1034840.c ===
#include <stdio.h>
#include <stdlib.h>
size_t dummy = 0;
===
gcc -c -O3 ztest1034840.c
Checking for size_t... Yes.

=== ztest1034840.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1034840.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest1034840.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1034840 ztest1034840.c
Checking for strerror... Yes.

=== ztest1034840.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1034840.c
Checking for unistd.h... Yes.

=== ztest1034840.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1034840.c
Checking for stdarg.h... Yes.

=== ztest1034840.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1034840.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest1034840.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest1034840 ztest1034840.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest1034840.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1034840.c
Checking for return value of vsnprintf()... Yes.

=== ztest1034840.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest1034840.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP =
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.3.1
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.3.1
SRCDIR =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /home/tdinh3/http_server/codecrafters-http-server-cpp/
sharedlibdir = ${libdir}
uname = Linux
--------------------


